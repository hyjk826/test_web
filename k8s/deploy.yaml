apiVersion: apps/v1
kind: Deployment
metadata:
  name: static-web
  namespace: web
  labels:
    app.kubernetes.io/name: static-web
    app.kubernetes.io/instance: static-web
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: static-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: static-web
      app.kubernetes.io/instance: static-web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: static-web
        app.kubernetes.io/instance: static-web
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: web
        app.kubernetes.io/part-of: static-web
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: static-web
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: web
          image: ghcr.io/hyjk826/static-web:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: NGINX_ENVSUBST_TEMPLATE_DIR
              value: /etc/nginx/templates
            - name: NGINX_ENVSUBST_OUTPUT_DIR
              value: /etc/nginx/conf.d
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              readOnly: true
            - name: tmp
              mountPath: /tmp
            - name: var-cache
              mountPath: /var/cache/nginx
            - name: var-run
              mountPath: /var/run
      volumes:
        - name: nginx-config
          configMap:
            name: static-web-nginx-config
        - name: tmp
          emptyDir: {}
        - name: var-cache
          emptyDir: {}
        - name: var-run
          emptyDir: {}
      # private 이미지면 아래 주석 해제 + imagePullSecrets 생성 필요
      # imagePullSecrets:
      #   - name: ghcr-creds
